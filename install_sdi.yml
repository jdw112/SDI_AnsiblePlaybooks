---
# 
# @author Jason Williams
# Security Directory Integrator v7.2 Installation
# Playbook built using SDI 7.2.0 and Red Hat 8.5

- name: Play SDI - Install Security Directory Integrator
# Hosts where SDI product is installed
  hosts: iam_sdi_hosts
  vars_files:
    - variables.yml 
  become_user: root
  become: true

  tasks:
    - name: Ensure temp directory '{{ temp }}' exists
      file:
        path: '{{ temp }}'
        
  # Install OS prereq
    - name: Install a list of OS packages
      yum:
        name:
          - glibc
          - nss-softokn
          - libXpm
          - libXtst
          - gtk2
          - libcanberra-gtk2
          - dejavu-lgc-sans-fonts
        state: present          

    - name: Update all OS packages 
      yum: name=* state=latest
      when: ansible_os_family == "RedHat"

  # Install SDI product
    - name: Extrace SDI Installer to temp directory 
      ansible.builtin.unarchive:
        src: install_images/SDI_7.2_XLIN86_64_ML.tar
        dest: '{{ temp }}'

    - name: Copy silent install property file to host
      copy:
        src: install_images/CustomInstallRspSDI72.txt
        dest: '{{ temp }}'

    - name: Update install directory in silent property file
      ansible.builtin.lineinfile:
        path: '{{ temp }}/CustomInstallRspSDI72.txt'
        regexp: 'USER_INSTALL_DIR'
        line: 'USER_INSTALL_DIR={{ sdi_root_dir }}'

    - name: Update solution directory in silent property file
      ansible.builtin.lineinfile:
        path: '{{ temp }}/CustomInstallRspSDI72.txt'
        regexp: 'TDI_SELECTED_SOLDIR'
        line: 'TDI_SELECTED_SOLDIR={{ sdi_solution_directory }}'

    - name : Install SDI product
      shell: > 
          ./install_sdiv72_linux_x86_64.bin
          -f '{{ temp|quote }}/CustomInstallRspSDI72.txt'
          -D\$TDI_SKIP_VERSION_CHECK\$='true'
          -D\$TDI_NOSHORTCUTS\$='true'
          -i silent
      args:
        chdir: '{{ temp }}/linux_x86_64'
      register: diff_cmd
      failed_when: diff_cmd.rc == 0 or diff_cmd.rc >= 2

  # REMOVE TEMP DIRECTORY
    - name: Remove temp working directory
      file:
        path: '{{ temp }}' 
        state: absent
...
