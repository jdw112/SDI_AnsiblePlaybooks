    - name: Insert/Update TLS properties in {{ sdi_root_dir }}/etc/global.properties
      blockinfile:
        path: '{{ sdi_root_dir }}/etc/global.properties'
        backup: yes
        marker: "## <!-- {mark} ANSIBLE MANAGED BLOCK - TLS -->"
        block: |
          # # ----------------------------------
          # # Protocols to enforce SSL protocols in a SDI Server
          # # Optional values for com.ibm.di.SSL* property (TLSv1, TLSv1.1, TLSv1.2).
          # # This can be a multi-valued comma separated property.
          # # Optional values for com.ibm.jsse2.overrideDefaultProtocol property (SSL_TLSv2, TLSv1,
          # # TLSv11,TLSv12). This is a single value property.
          # # ----------------------------------
          com.ibm.di.SSLProtocols=TLSv1.3,TLSv1.2
          com.ibm.di.SSLServerProtocols=TLSv1.3,TLSv1.2
          com.ibm.jsse2.overrideDefaultProtocol=TLSv12
          com.ibm.jsse2.overrideDefaultTLS=true
          # # ----- -----------------------------
          # # Protocols used for built-in SDI Server web container traffic.
          # # This effects the web.server.port property
          # # URLs used by the web.server.port property are
          # # e.g.
          # # https://localhost:1098/dashboard
          # # https://localhost:1098/sdi
          # # https://localhost:1098/rest
          # # ----------------------------------
          org.eclipse.equinox.http.jetty.ssl.protocol=TLSv1.2
          
          # # Setting TLSv1.3 as the default protocol in many cases when SDI is the client.
          jdk.tls.client.protocols = TLSv1.3,TLSv1.2
          # # Similar to above when SDI is the server, e.g. for the HTTP Server Connector
          jdk.tls.server.protocols = TLSv1.3,TLSv1.2
          # # For some WebService connectors and similar components using HttpsUrlConnection or URL.openStream()
          https.protocols = TLSv1.3,TLSv1.2
          # # For some mail components:
          mail.smtp.ssl.protocols=TLSv1.3,TLSv1.2
          
          # # If there are problems, the following 'javax.net.debug' property can be used to help 
          # # investigation the issue. This should be enabled sparingly and should only be used 
          # # when SDI is invoked from command line. The ssl trace content will be sent to stdout. 
          # # Stdout can be captured by appending '-l /tmp/ssl_stdout.log' to the 'ibmdisrv' command.
          # javax.net.debug=ssl:all

